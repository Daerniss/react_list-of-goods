{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","isReverse","sortBy","selectedValue","reverseList","setState","sortList","option","resetList","filterList","e","target","value","this","visibleGoods","props","goods","filter","item","length","sort","a","b","localeCompare","reverse","type","name","onClick","currentTarget","onChange","Array","from","_","i","map","num","React","Component","goodsFromServer","App","isStarted","handleStart","className","ReactDOM","render","document","getElementById"],"mappings":"+MAcaA,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXC,OAAQ,KACRC,cAAe,GAJnB,EAOEC,YAAc,WACZ,EAAKC,UAAS,kBAAoB,CAAEJ,WAAtB,EAAGA,eARrB,EAWEK,SAAW,SAACC,GACV,EAAKF,SAAS,CAAEH,OAAQK,KAZ5B,EAeEC,UAAY,WACV,EAAKH,SAAS,CACZJ,WAAW,EACXC,OAAQ,KACRC,cAAe,KAnBrB,EAuBEM,WAAa,SAACC,GACZ,EAAKL,SAAS,CAAEF,eAAgBO,EAAEC,OAAOC,SAxB7C,4CA2BE,WAAU,IAAD,OACP,EAIIC,KAAKb,MAHPC,EADF,EACEA,UACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,cAKIW,EAFYD,KAAKE,MAAfC,MAEmBC,QACzB,SAAAC,GAAI,OAAIA,EAAKC,QAAUhB,KAsBzB,OAnBID,GACFY,EAAaM,MAAK,SAACC,EAAGC,GACpB,OAAQpB,GACN,IAAK,iBACH,OAAOmB,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEF,OAASG,EAAEH,OAEtB,QACE,OAAO,MAKXlB,GACFa,EAAaU,UAIb,gCACE,wBACEC,KAAK,SACLC,KAAK,UACLC,QAASd,KAAKT,YAHhB,qBAQA,wBACEqB,KAAK,SACLC,KAAK,iBACLC,QAAS,SAACjB,GAAD,OAAO,EAAKJ,SAASI,EAAEkB,cAAcF,OAHhD,iCAQA,wBACED,KAAK,SACLC,KAAK,SACLC,QAAS,SAACjB,GAAD,OAAO,EAAKJ,SAASI,EAAEkB,cAAcF,OAHhD,4BAQA,wBAAQd,MAAOT,EAAe0B,SAAUhB,KAAKJ,WAA7C,SACGqB,MAAMC,KAAK,CAAEZ,OAAQ,KAAM,SAACa,EAAGC,GAAJ,OAAUA,EAAI,KACvCC,KAAI,SAACC,GAAD,OACH,wBAAkBvB,MAAOuB,EAAzB,SAA+BA,GAAlBA,QAInB,wBACEV,KAAK,SACLC,KAAK,QACLC,QAASd,KAAKL,UAHhB,mBAOA,6BACGM,EAAaoB,KAAI,SAAAhB,GAAI,OAAK,6BAAgBA,GAAPA,eApG9C,GAA+BkB,IAAMC,WCV/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJvC,MAAQ,CACNwC,WAAW,G,EAGbC,YAAc,WACZ,EAAKpC,SAAS,CAAEmC,WAAW,K,4CAG7B,WACE,IAAQA,EAAc3B,KAAKb,MAAnBwC,UAER,OACE,sBAAKE,UAAU,MAAf,UACE,wCACEF,GACA,wBACEb,QAASd,KAAK4B,YACdhB,KAAK,SAFP,mBAQDe,GAAa,cAAC,EAAD,CAAWxB,MAAOsB,W,GAxBtBF,IAAMC,WA8BTE,IChDfI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d05b19e7.chunk.js","sourcesContent":["import React from 'react';\n\ntype SortBy = 'alphabetically' | 'length';\n\ninterface Props {\n  goods: string[];\n}\n\ninterface State {\n  isReverse: boolean;\n  sortBy: SortBy | null;\n  selectedValue: number;\n}\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isReverse: false,\n    sortBy: null,\n    selectedValue: 1,\n  };\n\n  reverseList = () => {\n    this.setState(({ isReverse }) => ({ isReverse: !isReverse }));\n  };\n\n  sortList = (option: SortBy) => {\n    this.setState({ sortBy: option });\n  };\n\n  resetList = () => {\n    this.setState({\n      isReverse: false,\n      sortBy: null,\n      selectedValue: 1,\n    });\n  };\n\n  filterList = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ selectedValue: +e.target.value });\n  };\n\n  render() {\n    const {\n      isReverse,\n      sortBy,\n      selectedValue,\n    } = this.state;\n\n    const { goods } = this.props;\n\n    const visibleGoods = goods.filter(\n      item => item.length >= selectedValue,\n    );\n\n    if (sortBy) {\n      visibleGoods.sort((a, b) => {\n        switch (sortBy) {\n          case 'alphabetically':\n            return a.localeCompare(b);\n\n          case 'length':\n            return a.length - b.length;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReverse) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div>\n        <button\n          type=\"button\"\n          name=\"reverse\"\n          onClick={this.reverseList}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          name=\"alphabetically\"\n          onClick={(e) => this.sortList(e.currentTarget.name as SortBy)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          name=\"length\"\n          onClick={(e) => this.sortList(e.currentTarget.name as SortBy)}\n        >\n          Sort by length\n        </button>\n\n        <select value={selectedValue} onChange={this.filterList}>\n          {Array.from({ length: 10 }, (_, i) => i + 1)\n            .map((num) => (\n              <option key={num} value={num}>{num}</option>\n            ))}\n        </select>\n\n        <button\n          type=\"button\"\n          name=\"reset\"\n          onClick={this.resetList}\n        >\n          Reset\n        </button>\n        <ul>\n          {visibleGoods.map(item => (<li key={item}>{item}</li>))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isStarted: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n  };\n\n  handleStart = () => {\n    this.setState({ isStarted: true });\n  };\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {!isStarted && (\n          <button\n            onClick={this.handleStart}\n            type=\"button\"\n          >\n            start\n          </button>\n        )}\n\n        {isStarted && <GoodsList goods={goodsFromServer} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}