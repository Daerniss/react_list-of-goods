{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","isReverse","sortBy","reverseList","setState","sortList","option","resetList","goods","this","props","visibleGoods","sort","a","b","localeCompare","length","reverse","type","name","onClick","e","currentTarget","map","item","React","Component","goodsFromServer","App","isStarted","handleStart","className","ReactDOM","render","document","getElementById"],"mappings":"sNAaaA,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXC,OAAQ,MAHZ,EAMEC,YAAc,WACZ,EAAKC,UAAS,kBAAoB,CAAEH,WAAtB,EAAGA,eAPrB,EAUEI,SAAW,SAACC,GACV,EAAKF,SAAS,CAAEF,OAAQI,KAX5B,EAcEC,UAAY,WACV,EAAKH,SAAS,CACZH,WAAW,EACXC,OAAQ,QAjBd,4CAqBE,WAAU,IAAD,OACCM,EAAUC,KAAKC,MAAfF,MACR,EAA8BC,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEbS,EAAY,YAAOH,GAqBzB,OAnBIN,GACFS,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQZ,GACN,IAAK,iBACH,OAAOW,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXf,GACFU,EAAaM,UAIb,qCACE,wBACEC,KAAK,SACLC,KAAK,UACLC,QAASX,KAAKN,YAHhB,qBAQA,wBACEe,KAAK,SACLC,KAAK,iBACLC,QAAS,SAACC,GAAD,OAAO,EAAKhB,SAASgB,EAAEC,cAAcH,OAHhD,iCAQA,wBACED,KAAK,SACLC,KAAK,SACLC,QAAS,SAACC,GAAD,OAAO,EAAKhB,SAASgB,EAAEC,cAAcH,OAHhD,4BAQA,wBACED,KAAK,SACLC,KAAK,QACLC,QAASX,KAAKF,UAHhB,mBAOA,6BACGI,EAAaY,KAAI,SAAAC,GAAI,OAAK,6BAAgBA,GAAPA,eAhF9C,GAA+BC,IAAMC,WCT/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJ5B,MAAQ,CACN6B,WAAW,G,EAGbC,YAAc,WACZ,EAAK1B,SAAS,CAAEyB,WAAW,K,4CAG7B,WACE,IAAQA,EAAcpB,KAAKT,MAAnB6B,UAER,OACE,sBAAKE,UAAU,MAAf,UACE,wCACEF,GACA,wBACET,QAASX,KAAKqB,YACdZ,KAAK,SAFP,mBAQDW,GAAa,cAAC,EAAD,CAAWrB,MAAOmB,W,GAxBtBF,IAAMC,WA8BTE,IChDfI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cbdf1912.chunk.js","sourcesContent":["import React from 'react';\n\ntype SortBy = 'alphabetically' | 'length';\n\ninterface Props {\n  goods: string[];\n}\n\ninterface State {\n  isReverse: boolean;\n  sortBy: SortBy | null;\n}\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isReverse: false,\n    sortBy: null,\n  };\n\n  reverseList = (): void => {\n    this.setState(({ isReverse }) => ({ isReverse: !isReverse }));\n  };\n\n  sortList = (option: SortBy): void => {\n    this.setState({ sortBy: option });\n  };\n\n  resetList = () => {\n    this.setState({\n      isReverse: false,\n      sortBy: null,\n    });\n  };\n\n  render() {\n    const { goods } = this.props;\n    const { isReverse, sortBy } = this.state;\n\n    const visibleGoods = [...goods];\n\n    if (sortBy) {\n      visibleGoods.sort((a, b) => {\n        switch (sortBy) {\n          case 'alphabetically':\n            return a.localeCompare(b);\n\n          case 'length':\n            return a.length - b.length;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReverse) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          name=\"reverse\"\n          onClick={this.reverseList}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          name=\"alphabetically\"\n          onClick={(e) => this.sortList(e.currentTarget.name as SortBy)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          name=\"length\"\n          onClick={(e) => this.sortList(e.currentTarget.name as SortBy)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          name=\"reset\"\n          onClick={this.resetList}\n        >\n          Reset\n        </button>\n        <ul>\n          {visibleGoods.map(item => (<li key={item}>{item}</li>))}\n        </ul>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isStarted: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n  };\n\n  handleStart = () => {\n    this.setState({ isStarted: true });\n  };\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {!isStarted && (\n          <button\n            onClick={this.handleStart}\n            type=\"button\"\n          >\n            start\n          </button>\n        )}\n\n        {isStarted && <GoodsList goods={goodsFromServer} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}